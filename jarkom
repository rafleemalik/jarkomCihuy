#!/usr/bin/python

import http, threading, sys, signal
from typing import Any

THREAD_MAX = 4

# .index() substitusion
def __index(lst: list, v: Any) -> int:
    for i, val in enumerate(lst):
        if val == v:
            return i

    return -1


def parse_args() -> dict[str, Any]:
    args = sys.argv[1:]
    option = {}

    option["thread"] = True
    thread_idx = __index(args, "--no-thread")
    if thread_idx != -1:
        args.pop(thread_idx)
        option["thread"] = False

    option["root"] = args[0] if len(args) >= 1 else "./"
    return option

def main():
    args = parse_args()
    server = http.init()

    def __sigint_handler(sig, frame):
        http.close(server)
        sys.exit(0)

    signal.signal(signal.SIGINT, __sigint_handler)

    if args["thread"]:
        for _ in range(THREAD_MAX):
            thread = threading.Thread(target=http.serve, args=[server, args["root"], lambda host, port: print(f"[INFO ::] Listening..")])
            thread.start()
    else:
        http.serve(server, args["root"], lambda host, port: print(f"[INFO ::] Listening (no threading).."))

if __name__ == "__main__":
    main()

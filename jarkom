#!/usr/bin/python

import http, sys, signal
from typing import Any

# .index() substitusion
def __index(lst: list, v: Any) -> int:
    for i, val in enumerate(lst):
        if val == v:
            return i

    return -1

def parse_args() -> dict[str, Any]:
    args = sys.argv[1:]

    option = {}
    option["thread"] = True

    thread_idx = __index(args, "--no-thread")
    if thread_idx != -1:
        args.pop(thread_idx)
        option["thread"] = False

    option["root"] = args[0] if len(args) >= 1 else "./"
    return option

def main():
    args = parse_args()
    server = http.init(thread=args["thread"])

    def __sigint_handler(sig, frame):
        http.close(server)
        sys.exit(0)

    signal.signal(signal.SIGINT, __sigint_handler)
    http.serve(server, args["root"], lambda host, port: http.log(f"Server alive at http://{host}:{port}"))

if __name__ == "__main__":
    main()
